<!DOCTYPE html>
<!-- saved from url=(0040)http://ife.baidu.com/course/detail/id/50 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="renderer" content="webkit"><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"><meta name="format-detection" content="telephone=no"><meta name="apple-mobile-web-app-capable" content="yes"><meta name="keywords" content="百度, 百度前端, 百度前端学院, 百度前端技术学院, 前端, 前端开发, web前端, 前端开发工程师, CSS, JavaScript, HTML, Web标准"><meta name="description" content="百度前端技术学院是面向大学生的前端技术学习平台，由百度创办的免费前端技术学习实践、交流、分享平台"><link rel="shortcut icon" href="http://ife.baidu.com/2018/asset/common/img/favicon_24c70cf.ico" type="image/x-icon"><link rel="icon" href="http://ife.baidu.com/2018/asset/common/img/favicon_24c70cf.ico" type="image/x-icon"><link rel="bookmark" href="http://ife.baidu.com/2018/asset/common/img/favicon_24c70cf.ico" type="image/x-icon">






<title>第二十二天到第二十四天：JavaScript里面的居民们</title><link href="./第二十二天到第二十四天：JavaScript里面的居民们_files/courseDetail_aio_c31a962.css" rel="stylesheet"><script src="./第二十二天到第二十四天：JavaScript里面的居民们_files/hm.js"></script><script>
    var _hmt = _hmt || [];
    (function() {
        var hm = document.createElement("script");
        hm.src = "//hm.baidu.com/hm.js?d422e3cabaaaa7445e54622b97472bab";
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
    })();
</script>





</head><body style=""><div id="viewport"><header><nav class="navbar navbar-default nav-wrapper" role="navigation"><div class="container-fluid"><div class="navbar-header"><button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target="#navbar"><span class="sr-only">Toggle navigation</span><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button><a class="navbar-brand ife-pic" href="http://ife.baidu.com/"><img alt="Brand" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/logo_a3b4064.png"></a></div><div id="navbar" class="navbar-collapse collapse"><ul class="nav navbar-nav nav-center"><li class="nav-menu "><a class="menu-path" href="http://ife.baidu.com/">首页</a></li><li class="nav-menu "><a class="menu-path" href="http://ife.baidu.com/course/all">所有课程</a></li><li class="nav-menu "><a class="menu-path" href="http://ife.baidu.com/note/list">精选笔记</a></li><li class="nav-menu "><a class="menu-path" href="http://ife.baidu.com/user/rank">学霸榜单</a></li><li class="nav-menu"><a class="menu-tieba" target="_blank" href="http://tieba.baidu.com/f?kw=%E7%99%BE%E5%BA%A6%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AD%A6%E9%99%A2&amp;ie=utf-8">学院贴吧</a></li><li class="nav-special begin"><a href="https://openapi.baidu.com/oauth/2.0/authorize?client_id=89XtMi6980UVMb5iMiRAL27g&amp;response_type=code&amp;redirect_uri=http%3A%2F%2Fife.baidu.com%2Fuser%2Fsignin&amp;scope=&amp;state=4dc948523cd41dd5f1117536bf12b282&amp;display=page" class="nav-btn">登录</a></li></ul></div></div></nav>
</header><p style="display:none">百度前端技术学院是一个为大学生创办的免费的前端技术实践、分享、交流平台。由百度校园招聘组、百度校园品牌部、百度前端技术部以及多个百度的前端团队联合创办。学院组织了一批百度在职工程师，精心编写了数十个实践编码任务，将技术知识点系统有机地串联在各个充满趣味与挑战的任务中，同学们通过实际地编码练习来掌握知识，再辅以互相评价、学习笔记等方式，加深对于学习内容的理解。在过去的三年中，百度前端技术学院累积吸引了上万名同学参加，并且有数十名同学在学习后，顺利加入了百度，成为了百度的前端工程师。</p>
<main class="course-detail-main"><div class="course-detail-wrap card"><div class="course-basic-wrap row"><div class="course-img-wrap col-md-5"><div class="course-img" style="background-image: url(http://gss0.baidu.com/9rkZbzqaKgQUohGko9WTAnF6hhy/mms-res/fed/ife/ife_tutor/课程配图.3fb31f3e5af7e8d7.jpg)"></div></div><div class="course-info col-md-7"><div class="course-title-wrap row"><h2 class="course-title col-md-9 col-xs-6">第二十二天到第二十四天：JavaScript里面的居民们</h2><span class="level-tag course-level col-md-3 col-xs-6"><i class="top-slash"></i><i class="bottom-slash"></i>普通</span></div><div class="course-from"><a href="http://ife.baidu.com/mentor/detail/id/2"><i class="icon-course-teacher"></i>Varsha</a><span class="separator"></span><a href="http://ife.baidu.com/college/detail/id/5"><i class="icon-course-college"></i>零基础学院</a></div><button disabled="" type="button" class="start-learn-btn ife-main-btn btn" data-loading-text="请求中...">课程已结束</button><p class="course-info-item course-status"><span class="key">人数</span>有<em>362</em>人在学习该课程，有<em>292</em>人已经完成该课程</p><p class="course-info-item course-learn-time"><span class="key">时间</span>平均用时<em>3.8</em>天</p><p class="course-info-item course-keywords"><span class="key">关键词</span><span class="tag">JavaScript</span></p></div></div><h3 class="course-descr-title">课程概述</h3><div class="md-content-wrap course-descr"><p class="deadline-tip">作业提交截止时间：09-01</p><h1 id="-javascript-">第二十二天到第二十四天：JavaScript里面的居民们</h1>
<h2 id="-">课程目标</h2>
<p>掌握 JavaScript 中的各个数据类型、对象的概念及常用方法，这次课程的任务量比较多，但不要着急，也不要急于完成任务，认真写好每一个代码。加油！</p>
<h2 id="-">课程描述</h2>
<h3 id="-">阅读</h3>
<p>首先，我们从变量和数据类型入手，同时学习一下 JavaScript 中的数字类型</p>
<ul>
<li><a href="http://www.w3school.com.cn/js/js_variables.asp">W3School 变量</a></li>
<li><a href="http://www.w3school.com.cn/js/js_datatypes.asp">W3School 数据类型</a></li>
<li><a href="https://blog.csdn.net/lxcao/article/details/71314605">JavaScript中值类型和引用类型的区别</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Variables">MDN 变量</a></li>
<li><a href="http://www.w3school.com.cn/js/js_obj_number.asp">W3School 数字</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Math">MDN 数字</a></li>
<li><a href="http://www.w3school.com.cn/jsref/jsref_obj_number.asp">Number</a></li>
<li><a href="http://www.w3school.com.cn/jsref/jsref_obj_math.asp">Math</a></li>
</ul>
<h3 id="-">编码</h3>
<p>首先练习数字相关的一些操作：</p>
<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Number A:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"radio-a"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"math-obj"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"a"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"num-a"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Number B:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"radio-b"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"math-obj"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"b"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"num-b"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>判断当前选中的输入框输入内容是否为数字<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>把 A 四舍五入为 B 个小数位数的数字<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>当前选中数字的绝对值<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>对当前选中的数字进行上舍入<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>对当前选中的数字进行下舍入<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>把当前选中的数字四舍五入为最接近的整数<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>返回 A 和 B 中的最高值<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>返回 A 和 B 中的最低值<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"result"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
</code></pre><p>基于如上HTML，实现需求</p>
<ul>
<li>按照HTML中按钮的描述以此实现功能</li>
<li>计算结果显示在 id 为 result 的 P 标签中</li>
<li>除了第一个按钮，其它按钮操作时，都需要判断输入是否为数字，否则在 console 中输出错误信息</li>
</ul>
<h3 id="-">阅读</h3>
<ul>
<li><a href="http://www.w3school.com.cn/js/js_obj_string.asp">W3School 字符串</a></li>
<li><a href="http://www.w3school.com.cn/jsref/jsref_obj_string.asp">W3School 字符串</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Strings">MDN JavaScript中的字符串</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Useful_string_methods">MDN 有用的字符串方法</a></li>
</ul>
<h3 id="-">编码</h3>
<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>String A:
        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"radio-a"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">checked</span>=<span class="hljs-string">"true"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"str-obj"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"a"</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"str-a"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>String B:
        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"radio-b"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"str-obj"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"b"</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"str-b"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span>        
    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Num A：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"num-a"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"number"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"0"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Num B：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"num-b"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"number"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"1"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>获取当前选中输入的内容长度<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>当前选中输入中的第3个字符<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>把两个输入框的文字连接在一起输出（concat）<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>输入B中的内容，在输入A的内容中第一次出现的位置（indexOf）<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>输入A中的内容，在输入B的内容中最后一次出现的位置（lastIndexOf）<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>使用slice获取选中输入框内容的部分内容，参数为num-a及num-b<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>当前选中输入框的行数<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>使用substr获取选中输入框内容的子字符串，参数为num-a及num-b<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>把所选输入框中的内容全部转为大写<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>把所选输入框中的内容全部转为小写<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>把所选输入框中内容的半角空格全部去除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>把所选输入框中内容的a全部替换成另外一个输入框中的内容<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"result"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
</code></pre><p>基于如上HTML，实现需求</p>
<ul>
<li>按照HTML中按钮的描述以此实现功能</li>
<li>计算结果显示在 id 为 result 的 P 标签中</li>
</ul>
<h3 id="-">编码</h3>
<pre><code><span class="hljs-comment">/*
实现一个字符串头尾去除空格的函数
注意需要去除的空格，包括全角、半角空格
暂时不需要学习和使用正则表达式的方式
*/</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diyTrim</span>(<span class="hljs-params">str</span>) </span>{
    <span class="hljs-keyword">var</span> result = <span class="hljs-string">""</span>;

    <span class="hljs-comment">// do something</span>

    <span class="hljs-keyword">return</span> result
}

<span class="hljs-comment">// 测试用例</span>
<span class="hljs-built_in">console</span>.log(diyTrim(<span class="hljs-string">' a f b    '</span>)); <span class="hljs-comment">// -&gt;a f b</span>
<span class="hljs-built_in">console</span>.log(diyTrim(<span class="hljs-string">'    ffdaf    '</span>)); <span class="hljs-comment">// -&gt;ffdaf</span>
<span class="hljs-built_in">console</span>.log(diyTrim(<span class="hljs-string">'1    '</span>)); <span class="hljs-comment">// -&gt;1</span>
<span class="hljs-built_in">console</span>.log(diyTrim(<span class="hljs-string">'　　f'</span>)); <span class="hljs-comment">// -&gt;f</span>
<span class="hljs-built_in">console</span>.log(diyTrim(<span class="hljs-string">'  　  a f b 　　 '</span>)); <span class="hljs-comment">// -&gt;a f b</span>
<span class="hljs-built_in">console</span>.log(diyTrim(<span class="hljs-string">' '</span>)); <span class="hljs-comment">// -&gt;</span>
<span class="hljs-built_in">console</span>.log(diyTrim(<span class="hljs-string">'　'</span>)); <span class="hljs-comment">// -&gt;</span>
<span class="hljs-built_in">console</span>.log(diyTrim(<span class="hljs-string">''</span>)); <span class="hljs-comment">// -&gt;</span>

<span class="hljs-comment">/*
去掉字符串str中，连续重复的地方
*/</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">removeRepetition</span>(<span class="hljs-params">str</span>) </span>{
    <span class="hljs-keyword">var</span> result = <span class="hljs-string">""</span>;

    <span class="hljs-comment">// do something</span>

    <span class="hljs-keyword">return</span> result;
}

<span class="hljs-comment">// 测试用例</span>
<span class="hljs-built_in">console</span>.log(removeRepetition(<span class="hljs-string">"aaa"</span>)); <span class="hljs-comment">// -&gt;a</span>
<span class="hljs-built_in">console</span>.log(removeRepetition(<span class="hljs-string">"abbba"</span>)); <span class="hljs-comment">// -&gt;aba</span>
<span class="hljs-built_in">console</span>.log(removeRepetition(<span class="hljs-string">"aabbaabb"</span>)); <span class="hljs-comment">// -&gt;abab</span>
<span class="hljs-built_in">console</span>.log(removeRepetition(<span class="hljs-string">""</span>)); <span class="hljs-comment">// -&gt;</span>
<span class="hljs-built_in">console</span>.log(removeRepetition(<span class="hljs-string">"abc"</span>)); <span class="hljs-comment">// -&gt;abc</span>
</code></pre><p>如以上代码，分别实现 diyTrim 及 removeRepetition 函数，并跑通代码中的测试用例。</p>
<h3 id="-">阅读</h3>
<ul>
<li><a href="http://www.w3school.com.cn/js/js_objects.asp">W3School 对象</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Basics">MDN JavaScript 对象基础</a></li>
</ul>
<h3 id="-">编码</h3>
<pre><code>var tree = {
    <span class="hljs-string">"id"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-string">"name"</span>: <span class="hljs-string">"root"</span>,
    <span class="hljs-string">"left"</span>: {
        <span class="hljs-string">"id"</span>: <span class="hljs-number">1</span>,
        <span class="hljs-string">"name"</span>: <span class="hljs-string">"Simon"</span>,
        <span class="hljs-string">"left"</span>: {
            <span class="hljs-string">"id"</span>: <span class="hljs-number">3</span>,
            <span class="hljs-string">"name"</span>: <span class="hljs-string">"Carl"</span>,
            <span class="hljs-string">"left"</span>: {
                <span class="hljs-string">"id"</span>: <span class="hljs-number">7</span>,
                <span class="hljs-string">"name"</span>: <span class="hljs-string">"Lee"</span>,
                <span class="hljs-string">"left"</span>: {
                    <span class="hljs-string">"id"</span>: <span class="hljs-number">11</span>,
                    <span class="hljs-string">"name"</span>: <span class="hljs-string">"Fate"</span>
                }
            },
            <span class="hljs-string">"right"</span>: {
                <span class="hljs-string">"id"</span>: <span class="hljs-number">8</span>,
                <span class="hljs-string">"name"</span>: <span class="hljs-string">"Annie"</span>,
                <span class="hljs-string">"left"</span>: {
                    <span class="hljs-string">"id"</span>: <span class="hljs-number">12</span>,
                    <span class="hljs-string">"name"</span>: <span class="hljs-string">"Saber"</span>
                }
            }
        },
        <span class="hljs-string">"right"</span>: {
            <span class="hljs-string">"id"</span>: <span class="hljs-number">4</span>,
            <span class="hljs-string">"name"</span>: <span class="hljs-string">"Tony"</span>,
            <span class="hljs-string">"left"</span>: {
                <span class="hljs-string">"id"</span>: <span class="hljs-number">9</span>,
                <span class="hljs-string">"name"</span>: <span class="hljs-string">"Candy"</span>
            }
        }
    },
    <span class="hljs-string">"right"</span>: {
        <span class="hljs-string">"id"</span>: <span class="hljs-number">2</span>,
        <span class="hljs-string">"name"</span>: <span class="hljs-string">"right"</span>,
        <span class="hljs-string">"left"</span>: {
            <span class="hljs-string">"id"</span>: <span class="hljs-number">5</span>,
            <span class="hljs-string">"name"</span>: <span class="hljs-string">"Carl"</span>,
        },
        <span class="hljs-string">"right"</span>: {
            <span class="hljs-string">"id"</span>: <span class="hljs-number">6</span>,
            <span class="hljs-string">"name"</span>: <span class="hljs-string">"Carl"</span>,
            <span class="hljs-string">"right"</span>: {
                <span class="hljs-string">"id"</span>: <span class="hljs-number">10</span>,
                <span class="hljs-string">"name"</span>: <span class="hljs-string">"Kai"</span>
            }        
        }
    }
}

// 假设id和name均不会重复，根据输入name找到对应的id
<span class="hljs-keyword">function</span> findIdByName(name) {

}

// 假设id和name均不会重复，根据输入id找到对应的name
<span class="hljs-keyword">function</span> findNameById(id) {

}

// 把这个对象中所有的名字以“前序遍历”的方式全部输出到console中
<span class="hljs-keyword">function</span> getListWithDLR() {

}

// 把这个对象中所有的名字以“中序遍历”的方式全部输出到console中
<span class="hljs-keyword">function</span> getListWithLDR() {

}

// 把这个对象中所有的名字以“后序遍历”的方式全部输出到console中
<span class="hljs-keyword">function</span> getListWithLRD() {

}
</code></pre><p>有如上对象，分别实现代码下方的几个函数，满足以下需求：</p>
<ul>
<li>假设id和name均不会重复，根据输入name找到对应的id</li>
<li>假设id和name均不会重复，根据输入id找到对应的name</li>
<li>把这个对象中所有的名字以“前序遍历”的方式全部输出到console中</li>
<li>把这个对象中所有的名字以“中序遍历”的方式全部输出到console中</li>
<li>把这个对象中所有的名字以“后序遍历”的方式全部输出到console中</li>
</ul>
<h3 id="-">阅读</h3>
<p>接下来我们学习一个非常有用的数据结构：数组</p>
<ul>
<li><a href="http://www.w3school.com.cn/js/js_obj_array.asp">W3School 数组</a></li>
<li><a href="http://www.w3school.com.cn/jsref/jsref_obj_array.asp">W3School 数组参考</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Arrays">MDN 数组</a></li>
<li><a href="https://baike.baidu.com/item/%E9%98%9F%E5%88%97/14580481?fr=aladdin">队列</a></li>
<li><a href="https://baike.baidu.com/item/%E6%A0%88/12808149">栈</a></li>
</ul>
<h3 id="-">编码</h3>
<p>练习如何使用数组来实现队列，综合考虑使用数组的 push，pop，shift，unshift操作</p>
<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"queue-input"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"queue-cont"</span>&gt;</span>队列内容：apple-&amp;gt;pear<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"in-btn"</span>&gt;</span>入队<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"out-btn"</span>&gt;</span>出队<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"font-btn"</span>&gt;</span>打印队头元素内容<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"empty-btn"</span>&gt;</span>判断队列是否为空<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript">

<span class="hljs-keyword">var</span> queue = [<span class="hljs-string">"apple"</span>, <span class="hljs-string">"pear"</span>];

</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
</code></pre><p>基于以上代码，实现如按钮中描述的功能：</p>
<ul>
<li>实现如阅读材料中，队列的相关入队、出队、获取队头、判空的操作</li>
<li>队头对应数组中最后一个元素</li>
<li>入队和出队操作后，需要在 id 为 queue-cont 的 p 标签中更新显示队列中的内容，队头在最右侧，中间用 -&gt; 连接（练习使用数组的join方法）</li>
</ul>
<h3 id="-">编码</h3>
<p>对上面练习稍作小调整：</p>
<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"queue-input"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"queue-cont"</span>&gt;</span>队列内容：apple&amp;lt;-pear<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"in-btn"</span>&gt;</span>入队<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"out-btn"</span>&gt;</span>出队<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"font-btn"</span>&gt;</span>打印队头元素内容<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"empty-btn"</span>&gt;</span>判断队列是否为空<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript">

<span class="hljs-keyword">var</span> queue = [<span class="hljs-string">"apple"</span>, <span class="hljs-string">"pear"</span>];

</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
</code></pre><p>基于以上代码，实现如按钮中描述的功能：</p>
<ul>
<li>实现如阅读材料中，队列的相关入队、出队、获取队头、判空的操作</li>
<li><ul>
<li>队头对应数组中第一个元素</li>
</ul>
</li>
<li>入队和出队操作后，需要在 id 为 queue-cont 的 p 标签中更新显示队列中的内容，队头在最左侧，中间用 &lt;- 连接（练习使用数组的join方法） </li>
</ul>
<h3 id="-">编码</h3>
<p>练习如何使用数组来实现栈，综合考虑使用数组的 push，pop，shift，unshift操作</p>
<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"stack-input"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"stack-cont"</span>&gt;</span>栈内容：apple-gt;pear<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"push-btn"</span>&gt;</span>进栈<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"pop-btn"</span>&gt;</span>退栈<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"font-btn"</span>&gt;</span>打印栈顶元素内容<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"empty-btn"</span>&gt;</span>判断栈是否为空<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript">

<span class="hljs-keyword">var</span> stack = [<span class="hljs-string">"apple"</span>, <span class="hljs-string">"pear"</span>];

</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
</code></pre><p>基于以上代码，实现如按钮中描述的功能：</p>
<ul>
<li>实现如阅读材料中，队列的相关进栈、退栈、获取栈顶、判空的操作</li>
<li>栈顶对应数组中最后一个元素</li>
<li>进栈和退栈操作后，需要在 id 为 stack-cont 的 p 标签中更新显示栈中的内容，栈顶在最右侧，中间用 -&gt; 连接（练习使用数组的join方法）</li>
</ul>
<h3 id="-">编码</h3>
<p>对上面练习进行小调整</p>
<pre><code><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"stack-input"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"stack-cont"</span>&gt;</span>栈内容：applelt;-pear<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"push-btn"</span>&gt;</span>进栈<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"pop-btn"</span>&gt;</span>退栈<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"font-btn"</span>&gt;</span>打印栈顶元素内容<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"empty-btn"</span>&gt;</span>判断栈是否为空<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript">

<span class="hljs-keyword">var</span> stack = [<span class="hljs-string">"apple"</span>, <span class="hljs-string">"pear"</span>];

</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
</code></pre><p>基于以上代码，实现如按钮中描述的功能：</p>
<ul>
<li>实现如阅读材料中，队列的相关进栈、退栈、获取栈顶、判空的操作</li>
<li>栈顶对应数组中第一个元素</li>
<li>进栈和退栈操作后，需要在 id 为 stack-cont 的 p 标签中更新显示栈中的内容，栈顶在最左侧，中间用 -&lt; 连接（练习使用数组的join方法）</li>
</ul>
<h3 id="-">阅读</h3>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">MDN 排序</a></li>
</ul>
<h3 id="-">编码</h3>
<pre><code>var arr = [<span class="hljs-number">43</span>, <span class="hljs-number">54</span>, <span class="hljs-number">4</span>, <span class="hljs-number">-4</span>, <span class="hljs-number">84</span>, <span class="hljs-number">100</span>, <span class="hljs-number">58</span>, <span class="hljs-number">27</span>, <span class="hljs-number">140</span>];
</code></pre><p>将上面数组分别按从大到小以及从小到大进行排序后在console中输出</p>
<pre><code><span class="hljs-attribute">var arr</span> = [<span class="hljs-string">'apple'</span>, <span class="hljs-string">'dog'</span>, <span class="hljs-string">'cat'</span>, <span class="hljs-string">'car'</span>, <span class="hljs-string">'zoo'</span>, <span class="hljs-string">'orange'</span>, <span class="hljs-string">'airplane'</span>];
</code></pre><p>将上面数组分别按字母顺序a-z及z-a进行排序，在console中输出</p>
<pre><code>var arr = [[<span class="hljs-number">10</span>, <span class="hljs-number">14</span>], [<span class="hljs-number">16</span>, <span class="hljs-number">60</span>], [<span class="hljs-number">7</span>, <span class="hljs-number">44</span>], [<span class="hljs-number">26</span>, <span class="hljs-number">35</span>], [<span class="hljs-number">22</span>, <span class="hljs-number">63</span>]];
</code></pre><p>将上面的二维数组，按照每个元素中第二个数从大到小的顺序进行排序输出，输出结果应该为：</p>
<pre><code>[[<span class="hljs-number">22</span>, <span class="hljs-number">63</span>], [<span class="hljs-number">16</span>, <span class="hljs-number">60</span>], [<span class="hljs-number">7</span>, <span class="hljs-number">44</span>], [<span class="hljs-number">26</span>, <span class="hljs-number">35</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">14</span>]]
</code></pre><pre><code><span class="hljs-built_in">var</span> arr = [
    {
        <span class="hljs-attribute">id:</span><span class="hljs-string"> 1,
        name</span>: <span class="hljs-string">'candy'</span>,
        <span class="hljs-attribute">value</span>: <span class="hljs-number">40</span>
    }, {
        <span class="hljs-attribute">id:</span><span class="hljs-string"> 2,
        name</span>: <span class="hljs-string">'Simon'</span>,
        <span class="hljs-attribute">value</span>: <span class="hljs-number">50</span>
    }, {
        <span class="hljs-attribute">id:</span><span class="hljs-string"> 3,
        name</span>: <span class="hljs-string">'Tony'</span>,
        <span class="hljs-attribute">value</span>: <span class="hljs-number">45</span>
    }, {
        <span class="hljs-attribute">id:</span><span class="hljs-string"> 4,
        name</span>: <span class="hljs-string">'Annie'</span>,
        <span class="hljs-attribute">value</span>: <span class="hljs-number">60</span>
    }
];
</code></pre><p>将上面数组分别按元素对象的value值从小到大进行排序后输出</p>
<h3 id="-">编码</h3>
<p>学习通用的数据用不同的数据结构进行存储，以及相互的转换</p>
<p>对象转为数组：</p>
<pre><code>var scoreObject = {
    <span class="hljs-string">"Tony"</span>: {
        <span class="hljs-string">"Math"</span>: <span class="hljs-number">95</span>,
        <span class="hljs-string">"English"</span>: <span class="hljs-number">79</span>,
        <span class="hljs-string">"Music"</span>: <span class="hljs-number">68</span>
    }, 
    <span class="hljs-string">"Simon"</span>: {
        <span class="hljs-string">"Math"</span>: <span class="hljs-number">100</span>,
        <span class="hljs-string">"English"</span>: <span class="hljs-number">95</span>,
        <span class="hljs-string">"Music"</span>: <span class="hljs-number">98</span>
    }, 
    <span class="hljs-string">"Annie"</span>: {
        <span class="hljs-string">"Math"</span>: <span class="hljs-number">54</span>,
        <span class="hljs-string">"English"</span>: <span class="hljs-number">65</span>,
        <span class="hljs-string">"Music"</span>: <span class="hljs-number">88</span>
    }
}
</code></pre><p>如上有一个用来存储学习成绩的对象，编写一个函数，将其转为如下的二维数组</p>
<pre><code>var scoreArray = [
    [<span class="hljs-string">"Tony"</span>, <span class="hljs-number">95</span>, <span class="hljs-number">79</span>, <span class="hljs-number">68</span>],
    ……
];
</code></pre><p>数组转为对象：</p>
<pre><code>var menuArr = [
    [<span class="hljs-number">1</span>, <span class="hljs-string">"Area1"</span>, <span class="hljs-number">-1</span>],
    [<span class="hljs-number">2</span>, <span class="hljs-string">"Area2"</span>, <span class="hljs-number">-1</span>],
    [<span class="hljs-number">3</span>, <span class="hljs-string">"Area1-1"</span>, <span class="hljs-number">1</span>],
    [<span class="hljs-number">4</span>, <span class="hljs-string">"Area1-2"</span>, <span class="hljs-number">1</span>],
    [<span class="hljs-number">5</span>, <span class="hljs-string">"Area2-1"</span>, <span class="hljs-number">2</span>],
    [<span class="hljs-number">6</span>, <span class="hljs-string">"Area2-2"</span>, <span class="hljs-number">2</span>],
    [<span class="hljs-number">7</span>, <span class="hljs-string">"Area1-2-3"</span>, <span class="hljs-number">4</span>],
    [<span class="hljs-number">8</span>, <span class="hljs-string">"Area2-2-1"</span>, <span class="hljs-number">6</span>],
];
</code></pre><p>如上有一个用来存储多级菜单数据的数组，编写一个函数，将其转为如下的对象</p>
<pre><code>var menuObject = {
    <span class="hljs-string">"1"</span>: {
        name: <span class="hljs-string">"Area1"</span>,
        subMenu: {
            <span class="hljs-string">"3"</span>: {
                name: <span class="hljs-string">"Area1-1"</span>
            },
            <span class="hljs-string">"4"</span>: {
                name: <span class="hljs-string">"Area1-2"</span>,
                subMenu: {
                    <span class="hljs-string">"7"</span>: {
                        name: <span class="hljs-string">"Area1-2-3"</span>
                    }
                }
            }
        }
    }

    ……

}
</code></pre><h2 id="-">进阶任务</h2>
<p>如果你很快就完成上面的任务，可以去LeetCode上去多进行一些练习。</p>
<h2 id="-">提交</h2>
<p>把你今天觉得做得最好的代码放在Github后进行提交</p>
<h2 id="-">总结</h2>
<p>依然把今天的学习用时，收获，问题进行记录</p>
<h2 id="-">下一个任务预告</h2>
<p>下一个任务将继续学习 JavaScript，我们将接触更多的 JavaScript 对象</p>
</div></div><div class="card learn-result-wrap work-info-wrap"><div class="others-work-info learn-result"><div class="title">学员提交的作业 (<span class="count">292</span>)</div><table class="table table-bordered table-responsive"><thead><tr><th>学员名称</th><th>提交时间</th><th>提交的代码</th><th>预览效果</th><th>评价数</th><th>平均得分</th><th>操作</th></tr></thead><tbody>
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/12238"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/96fb7171313030333634343632336f2d">庾琪</a></td>
            <td>2018-08-31 23:41</td>
            <td><a href="https://github.com/GeniFish/learning-notes" target="_blank">点击查看</a></td>
            <td><span class="none-tip">无</span></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/32989">去评价获取积分</a></td></tr>
        
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/20629"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/79c56167657a79634001">朱宇超</a></td>
            <td>2018-08-31 23:08</td>
            <td><a href="https://github.com/agezyc/ife/tree/master/D22D24" target="_blank">点击查看</a></td>
            <td><span class="none-tip">无</span></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/32973">去评价获取积分</a></td></tr>
        
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/23849"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/866d54686557686f34303d3a">范旭超</a></td>
            <td>2018-08-31 16:58</td>
            <td><a href="https://codepen.io/chaoNav/pen/vzyaeZ" target="_blank">点击查看</a></td>
            <td><a href="https://codepen.io/chaoNav/pen/vzyaeZ" target="_blank">点击查看</a></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/32925">去评价获取积分</a></td></tr>
        
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/25029"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/0e99e99988e88287e982a6e585abe5b08fe697b62ac8">陈邦</a></td>
            <td>2018-08-30 21:14</td>
            <td><a href="https://github.com/BitHub00/ife/blob/master/%E5%9F%BA%E7%A1%80%E5%AD%A6%E9%99%A2/day3/index.html" target="_blank">点击查看</a></td>
            <td><span class="none-tip">无</span></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/32812">去评价获取积分</a></td></tr>
        
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/24472"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/caabe985b7e68b89e79aaee58da1e69da5e595a66b2f">王洪惠</a></td>
            <td>2018-08-30 20:37</td>
            <td><a href="https://github.com/amberwest/Front_End_Study/blob/master/day22-24/sort.html" target="_blank">点击查看</a></td>
            <td><span class="none-tip">无</span></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/32794">去评价获取积分</a></td></tr>
        
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/19520"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/f136065d">田甜</a></td>
            <td>2018-08-29 22:02</td>
            <td><a href="https://github.com/xiaoTCOI/practice/tree/master/study22_24" target="_blank">点击查看</a></td>
            <td><a href="https://xiaotcoi.github.io/practice/study22_24/index.html" target="_blank">点击查看</a></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/32708">去评价获取积分</a></td></tr>
        
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/23716"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/74226472616b65646f676c6966653828">高一方</a></td>
            <td>2018-08-29 01:22</td>
            <td><a href="https://github.com/drakedoglife/day22-24" target="_blank">点击查看</a></td>
            <td><a href="https://github.com/drakedoglife/day22-24" target="_blank">点击查看</a></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/32635">去评价获取积分</a></td></tr>
        
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/12771"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/f844e9a699e88f9c537572706c75731bb7">梁刚</a></td>
            <td>2018-08-28 14:46</td>
            <td><a href="https://github.com/wangmiao8/Baidu-2018IFE/tree/master/IFE-Day22~24" target="_blank">点击查看</a></td>
            <td><a href="https://github.com/wangmiao8/Baidu-2018IFE/tree/master/IFE-Day22~24" target="_blank">点击查看</a></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/30245">去评价获取积分</a></td></tr>
        
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/22378"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/5602e688b4e5a2a8e9959ce78ea9e6898be69cba5121">焦国峰</a></td>
            <td>2018-08-27 22:57</td>
            <td><a href="https://github.com/m9527/web_learning/tree/master/day22" target="_blank">点击查看</a></td>
            <td><span class="none-tip">无</span></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/31825">去评价获取积分</a></td></tr>
        
            <tr><td class="submitter"><a href="http://ife.baidu.com/user/profile/id/23746"><img class="user-photo" src="./第二十二天到第二十四天：JavaScript里面的居民们_files/b011e5889be8a18ce59ba24837355336189f">黄志豪</a></td>
            <td>2018-08-27 14:41</td>
            <td><a href="https://github.com/whoopsHzh/YellowChecken/tree/master/js%E5%AD%A6%E4%B9%A0" target="_blank">点击查看</a></td>
            <td><span class="none-tip">无</span></td>
            <td><span class="none-tip">0</span></td>
            <td><span class="none-tip">-</span></td>
            <td><a href="http://ife.baidu.com/work/detail/id/30743">去评价获取积分</a></td></tr>
        </tbody></table><p class="work-empty-tip" style="display: none;">暂时没有作业提交~</p><div class="load-more-wrap view-more">
        <div class="loading-tip"><i class="icon-loading"></i>加载中...</div>
        <p class="load-none-tip">没有更多了！</p>
        <span class="load-more-btn">点击加载更多</span>
    </div></div></div><div class="card learn-result-wrap note-info-wrap"><div class="recm-note-info learn-result"><div class="title">课程优秀学习笔记</div><p class="note-empty-tip">暂无优秀学习笔记~</p></div></div></main>
<footer><div class="footer"><div class="footer-wrapper"><p class="first"><span class="contact">IFE微信公众号：</span><span class="footer-content footer-mg">baidu_ife</span><span class="contact">IFE微博：<a target="_blank" class="footer-content" href="http://weibo.com/u/5568860641?topnav=1&amp;wvr=6&amp;topsug=1">Baidu前端技术学院</a></span></p><p class="friend-link"><span class="note footer-text">友情链接:</span><a class="footer-mg" target="_blank" title="百度EFE前端团队" href="http://efe.baidu.com/">百度EFE</a><a class="footer-mg" target="_blank" href="http://campus.baidu.com/">百度校园</a><a class="footer-mg" target="_blank" href="http://talent.baidu.com/external/baidu/campus.html">百度校园招聘</a><a class="footer-mg" target="_blank" href="http://bit.baidu.com/?fr=ife/">百度技术学院</a></p><p class="learn-source"><span class="source footer-text">资源:</span><a class="footer-mg" target="_blank" href="https://github.com/baidu-ife">IFE 2015</a><a class="footer-mg" href="http://ife.baidu.com/2016/static/index.html" target="_blank">IFE 2016</a><a class="footer-mg" href="http://ife.baidu.com/2017" target="_blank">IFE 2017</a></p><p class="copyright"><span class="copyright-text"><span>©2017&nbsp;Baidu&nbsp;</span><a href="http://www.baidu.com/duty/" target="_blank">使用百度前必读</a>&nbsp;<a href="http://jianyi.baidu.com/" target="_blank">意见反馈</a>&nbsp;<span>京ICP证030173号&nbsp;</span></span></p></div></div>
</footer></div><a id="go-top" style="" href="http://ife.baidu.com/course/detail/id/50#"><i class="icon-arrow-up"></i></a><script src="./第二十二天到第二十四天：JavaScript里面的居民们_files/esl.js"></script><script>require.config({"baseUrl": "//ife.baidu.com/2018/asset","paths": {"babelHelpers": "babelHelpers"},"packages": [{"name": "vue-router","location": "../dep/vue-router","main": "dist/vue-router.common"},{"name": "etpl","location": "../dep/etpl/asset","main": "main"},{"name": "saber-emitter","location": "../dep/saber-emitter/asset","main": "emitter"},{"name": "bootstrapValidator","location": "../dep/bootstrapValidator","main": "dist/js/bootstrapValidator"},{"name": "bootstrap-slider","location": "../dep/bootstrap-slider","main": "dist/bootstrap-slider"},{"name": "slick-carousel","location": "../dep/slick-carousel","main": "slick/slick"},{"name": "simplemde","location": "../dep/simplemde/asset","main": "js/simplemde"},{"name": "codemirror","location": "../dep/codemirror","main": "lib/codemirror"},{"name": "codemirror-spell-checker","location": "../dep/codemirror-spell-checker/asset","main": "js/spell-checker"},{"name": "typo-js","location": "../dep/typo-js","main": "typo"},{"name": "marked","location": "../dep/marked","main": "lib/marked"},{"name": "highlight.js","location": "../dep/highlight.js","main": "lib/index"},{"name": "jquery-editable-select","location": "../dep/jquery-editable-select","main": "dist/jquery-editable-select.min"},{"name": "bootstrap","location": "../dep/bootstrap/js","main": "./dist/js/npm"},{"name": "bce-bos-uploader","location": "../dep/bce-bos-uploader","main": "bce-bos-uploader.bundle.min"},{"name": "echarts","location": "../dep/echarts/lib","main": "echarts"},{"name": "zrender","location": "../dep/zrender","main": "lib/zrender"},{"name": "vue","location": "../dep/vue","main": "dist/vue.runtime.common"},{"name": "element-ui","location": "../dep/element-ui","main": "lib/element-ui.common"},{"name": "async-validator","location": "../dep/async-validator","main": "lib/index"},{"name": "babel-helper-vue-jsx-merge-props","location": "../dep/babel-helper-vue-jsx-merge-props","main": "index"},{"name": "deepmerge","location": "../dep/deepmerge","main": "dist/umd"},{"name": "throttle-debounce","location": "../dep/throttle-debounce","main": "index"}],"shim": {"jquery": {"exports": "$"}},"waitSeconds": 5});</script><script src="./第二十二天到第二十四天：JavaScript里面的居民们_files/jquery-1.10.2_d88366fd.js"></script>
<script src="./第二十二天到第二十四天：JavaScript里面的居民们_files/courseDetail_aio_61e6e3d.js"></script>
<script src="./第二十二天到第二十四天：JavaScript里面的居民们_files/course_detail56da3f2c_vendor_503601d.js"></script>
<script>
    require(['course/courseDetail'], function (app) {
        app.init([], {
            courseId: "50",
            courseTitle: "\u7b2c\u4e8c\u5341\u4e8c\u5929\u5230\u7b2c\u4e8c\u5341\u56db\u5929\uff1aJavaScript\u91cc\u9762\u7684\u5c45\u6c11\u4eec",
            hasWorkInfo: 0,
            workInfo: 0        });
    });
</script>


</body></html>